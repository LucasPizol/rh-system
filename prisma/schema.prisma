// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Company {
  id   String @id @default(cuid())
  name String

  employees   Employee[]
  users       User[]
  departments Department[]
  contracts   Contract[]
  product     Product[]

  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  historic  Historic[]
}

model User {
  id       String @id @default(cuid())
  username String @unique
  password String

  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  company   Company    @relation(fields: [companyId], references: [id])
  companyId String
  historic  Historic[]
}

model Employee {
  id      String @id @default(cuid())
  name    String
  email   String
  phone   String
  address String

  document         String
  documentPhotoUrl String

  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  contract  Contract[]

  department   Department @relation(fields: [departmentId], references: [id])
  departmentId String
  company      Company    @relation(fields: [companyId], references: [id])
  companyId    String

  isDisabled Boolean   @default(false)
  disabledAt DateTime?

  isFired     Boolean   @default(false)
  firedAt     DateTime?
  firedReason String?
}

model Department {
  id   String @id @default(cuid())
  name String

  employees Employee[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  company   Company  @relation(fields: [companyId], references: [id])
  companyId String
}

model Contract {
  id         String @id @default(cuid())
  employeeId String

  startDate        DateTime
  endDate          DateTime?
  interrupmentDate DateTime?
  role             String

  contractUrl String

  type String @default("cpf")

  sallary Float
  hours   Float

  hoursType   String  @default("monthly")
  description String?

  employee Employee @relation(fields: [employeeId], references: [id])
  url      String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  company   Company  @relation(fields: [companyId], references: [id])
  companyId String
}

model Product {
  id   String @id @default(cuid())
  name String

  description String?

  barcode String @unique

  minQuantity Float @default(0)
  quantity    Float

  boughtPrice Float @default(0)
  sellPrice   Float @default(0)

  weight Float @default(0)

  batchNumber String?

  unit String

  category String

  isOwner Boolean @default(false)

  location       String?
  validationDate DateTime?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  companyId String
  company   Company    @relation(fields: [companyId], references: [id])
  historic  Historic[]
}

model Historic {
  id String @id @default(cuid())

  productId String
  product   Product @relation(fields: [productId], references: [id])

  companyId String
  company   Company @relation(fields: [companyId], references: [id])

  sellPrice   Float
  boughtPrice Float

  lastQuantity Float

  userId String
  user   User   @relation(fields: [userId], references: [id])

  type String

  quantity Float

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
